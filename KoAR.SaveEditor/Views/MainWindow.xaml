<Window x:Class="KoAR.SaveEditor.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:views="clr-namespace:KoAR.SaveEditor.Views"
    xmlns:constructs="clr-namespace:KoAR.SaveEditor.Constructs" 
    xmlns:core="clr-namespace:KoAR.Core;assembly=KoAR.Core"
    mc:Ignorable="d" d:DataContext="{d:DesignInstance {x:Type views:MainViewModel}}"
    Width="1366" Height="768" WindowStartupLocation="CenterScreen" 
    Icon="/app.ico" ResizeMode="CanResizeWithGrip">
    <Window.Resources>
        <ObjectDataProvider x:Key="ViewModel" ObjectType="{x:Type views:MainViewModel}" />
        <constructs:NegatedBooleanConverter x:Key="NegatedBooleanConverter" />
        <constructs:StringIsNullOrEmptyConverter x:Key="StringIsNullOrEmptyConverter" />
        <constructs:LittleEndianConverter x:Key="LittleEndianConverter" />
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Border BorderBrush="Red" BorderThickness="1">
                            <Grid>
                                <Polygon Fill="Red" Margin="0,2,2,0" Points="10,10 10,0 0,0" VerticalAlignment="Top" HorizontalAlignment="Right"
                                    Tag="{Binding AdornedElement.(Validation.Errors)/ErrorContent, ElementName=PART_Adorner}" Cursor="Hand">
                                    <Polygon.ToolTip>
                                        <ToolTip Content="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" BorderThickness="1" Foreground="White" Background="Red" />
                                    </Polygon.ToolTip>
                                </Polygon>
                                <AdornedElementPlaceholder x:Name="PART_Adorner" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <Binding Source="{StaticResource ViewModel}" />
    </Window.DataContext>
    <Window.Style>
        <Style TargetType="{x:Type Window}" BasedOn="{StaticResource {x:Type Window}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding FileName, Converter={StaticResource StringIsNullOrEmptyConverter}}" Value="False">
                    <Setter Property="Title" Value="{Binding FileName, StringFormat='{}{0} - KoAR Save Editor'}" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding FileName, Converter={StaticResource StringIsNullOrEmptyConverter}}" Value="False" />
                        <Condition Binding="{Binding UnsavedChanges}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Title" Value="{Binding FileName, StringFormat='* {0} - KoAR Save Editor'}" />
                </MultiDataTrigger>
            </Style.Triggers>
            <Setter Property="Title" Value="KoAR Save Editor" />
        </Style>
    </Window.Style>
    <DockPanel>
        <Border DockPanel.Dock="Top" Background="Transparent" BorderBrush="{x:Static SystemColors.ActiveBorderBrush}" BorderThickness="0,0,0,1">
            <Border.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="BD" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2">
                                    <Image Width="18" Source="{TemplateBinding Tag}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.25" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="BD" Property="BorderBrush" Value="LightGray" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <ScaleTransform ScaleX="0.85" ScaleY="0.85" po:Freeze="True" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Margin" Value="2" />
                </Style>
                <BitmapImage UriSource="/Resources/Open.png" x:Key="Open" po:Freeze="True" />
                <BitmapImage UriSource="/Resources/Save.png" x:Key="Save" po:Freeze="True" />
                <BitmapImage UriSource="/Resources/Help.png" x:Key="Help" po:Freeze="True" />
            </Border.Resources>
            <StackPanel Orientation="Horizontal">
                <Button ToolTip="Open File..." Command="{Binding OpenFileCommand}" Tag="{StaticResource Open}" />
                <Button ToolTip="Save" Command="{Binding SaveCommand}" Tag="{StaticResource Save}" />
                <Button ToolTip="Help" Command="Help" Tag="{StaticResource Help}" />
            </StackPanel>
        </Border>
        <Border DockPanel.Dock="Bottom"  Background="{x:Static SystemColors.ControlBrush}" Padding="4">
            <TextBlock Text="{Binding FilteredItems.Count, StringFormat='Count: {0}'}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding FileName}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Border>
        <Grid Grid.IsSharedSizeScope="True">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding FileName}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False" />
                            <Setter Property="Opacity" Value="0.5" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" SharedSizeGroup="TopRow" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <GroupBox Header="Filters" Margin="4">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="FrameworkElement" x:Key="ElementStyle">
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ElementStyle}">
                                <Setter Property="TextAlignment" Value="Right" />
                            </Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="48" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Name:" />
                        <TextBox Grid.Column="1" Text="{Binding ItemNameFilter, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Grid.Column="2" Text="Type:" />
                        <views:EquipmentCategorySelector Grid.Column="3" Category="{Binding CategoryFilter}" Items="{Binding Items}" />
                        <TextBlock Grid.Column="4" Text="Cur. Durability:" />
                        <TextBox Grid.Column="5">
                            <TextBox.Text>
                                <Binding Path="CurrentDurabilityFilter" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <constructs:RegexValidationRule Pattern="^\d+(\.\d+)?$" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBlock Grid.Column="6" Text="Max. Durability:" />
                        <TextBox Grid.Column="7">
                            <TextBox.Text>
                                <Binding Path="MaxDurabilityFilter" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <constructs:RegexValidationRule Pattern="^\d+(\.\d+)?$" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <Button Grid.Column="8" Content="Reset" Command="{Binding ResetFiltersCommand}" Margin="2" VerticalAlignment="Center" />
                    </Grid>
                </GroupBox>
                <views:ItemsView Grid.Row="1" Items="{Binding FilteredItems}" SelectedItem="{Binding SelectedItem}" 
                    EditItemHexCommand="{Binding EditItemHexCommand}" AllItemsUnsellable="{Binding AllItemsUnsellable}" />
            </Grid>
            <GridSplitter Grid.Column="1" Width="2" HorizontalAlignment="Stretch" Background="{x:Static SystemColors.ControlBrush}" FocusVisualStyle="{x:Null}" />
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" SharedSizeGroup="TopRow"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <GroupBox Header="Inventory Size" Margin="4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Size:" Margin="2" VerticalAlignment="Center" TextAlignment="Right"/>
                        <TextBox Grid.Column="1" MinWidth="100" Margin="2" TextAlignment="Right">
                            <TextBox.Text>
                                <Binding Path="InventorySize" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <constructs:RegexValidationRule Pattern="^\d+$" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <Button Grid.Column="2" Margin="2" Command="{Binding UpdateInventorySizeCommand}" Content="_Update" />
                    </Grid>
                </GroupBox>
                <ScrollViewer Grid.Row="1" FocusVisualStyle="{x:Null}" Margin="0,0,4,4" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <StackPanel Grid.IsSharedSizeScope="True">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type views:EffectListControl}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedItem}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Setter Property="Opacity" Value="0.66" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Resources>
                        <GroupBox Margin="4" Header="Effects">
                            <GroupBox.Style>
                                <Style TargetType="{x:Type GroupBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedItem}" Value="{x:Null}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="Opacity" Value="0.66" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </GroupBox.Style>
                            <Grid x:Name="PART_Grid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock VerticalAlignment="Center" Margin="2" TextAlignment="Right" Text="# Effects:"/>
                                <TextBox Grid.Column="1" VerticalAlignment="Center" Margin="2" Text="{Binding SelectedItem.EffectCount, Mode=OneWay}" 
                                    TextAlignment="Right" IsReadOnly="True" Background="{x:Static SystemColors.ControlBrush}" />
                                <views:EffectsControl Grid.Row="1" Grid.ColumnSpan="2" ProcessEffectLabel="Add" Header="Add Effect:" Effects="{x:Static core:Amalur.Effects}" 
                                    SelectedEffect="{Binding SelectedEffect}" Command="{Binding AddEffectCommand}" />
                            </Grid>
                        </GroupBox>
                        <views:EffectListControl Margin="4" Header="{Binding SelectedItem}" Effects="{Binding SelectedItem.CoreEffects}" AvailableEffects="{Binding Values, Source={x:Static core:Amalur.CoreEffects}}"
                            DeleteEffectCommand="{Binding DeleteCoreEffectCommand}">
                            <views:EffectListControl.HeaderTemplate>
                                <DataTemplate DataType="{x:Type views:ItemModel}">
                                    <TextBlock>
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                                        <Setter Property="Text" Value="Core Effects:" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                <Setter Property="Text" Value="{Binding CoreEffects.MysteryInteger, Mode=OneWay, StringFormat='Core Effects: (Mystery Byte: {0:X2})'}" />
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </views:EffectListControl.HeaderTemplate>
                        </views:EffectListControl>
                        <views:EffectListControl Margin="4" Header="Effects:" Effects="{Binding SelectedItem.Effects}" AvailableEffects="{x:Static core:Amalur.Effects}"
                            DeleteEffectCommand="{Binding DeleteEffectCommand}" />
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
