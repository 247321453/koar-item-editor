<Window x:Class="KoAR.SaveEditor.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="clr-namespace:KoAR.SaveEditor.Views"
    xmlns:constructs="clr-namespace:KoAR.SaveEditor.Constructs" 
    xmlns:componentmodel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    mc:Ignorable="d" d:DataContext="{d:DesignInstance {x:Type views:MainViewModel}}"
    Width="1024" Height="768" WindowStartupLocation="CenterScreen" 
    Icon="../app.ico" ResizeMode="CanResizeWithGrip">
    <Window.Resources>
        <ObjectDataProvider x:Key="ViewModel" ObjectType="{x:Type views:MainViewModel}" />
        <ControlTemplate x:Key="TextBoxValidationErrorTemplate">
            <Border BorderBrush="Red" BorderThickness="1">
                <Grid>
                    <Polygon Fill="Red" Margin="0,2,2,0" Points="10,10 10,0 0,0" VerticalAlignment="Top" HorizontalAlignment="Right"
                        Tag="{Binding AdornedElement.(Validation.Errors)/ErrorContent, ElementName=PART_Adorner}" Cursor="Hand">
                        <Polygon.ToolTip>
                            <ToolTip Content="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" 
                                BorderThickness="1" Foreground="White" Background="Red" />
                        </Polygon.ToolTip>
                    </Polygon>
                    <AdornedElementPlaceholder x:Name="PART_Adorner" />
                </Grid>
            </Border>
        </ControlTemplate>
        <constructs:NegatedBooleanConverter x:Key="NegatedBooleanConverter" />
        <constructs:StringIsNullOrEmptyConverter x:Key="StringIsNullOrEmptyConverter" />
        <constructs:LittleEndianConverter x:Key="LittleEndianConverter" />
    </Window.Resources>
    <Window.DataContext>
        <Binding Source="{StaticResource ViewModel}" />
    </Window.DataContext>
    <Window.Style>
        <Style TargetType="{x:Type Window}" BasedOn="{StaticResource {x:Type Window}}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding FileName, Converter={StaticResource StringIsNullOrEmptyConverter}}" Value="False" />
                        <Condition Binding="{Binding UnsavedChanges}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Title" Value="{Binding FileName, StringFormat='{}{0} - KoAR Save Editor'}" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding FileName, Converter={StaticResource StringIsNullOrEmptyConverter}}" Value="False" />
                        <Condition Binding="{Binding UnsavedChanges}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Title" Value="{Binding FileName, StringFormat='* {0} - KoAR Save Editor'}" />
                </MultiDataTrigger>
            </Style.Triggers>
            <Setter Property="Title" Value="KoAR Save Editor" />
        </Style>
    </Window.Style>
    <DockPanel>
        <DockPanel.Resources>
            <CollectionViewSource x:Key="FilteredItems" Source="{Binding FilteredItems}">
                <CollectionViewSource.SortDescriptions>
                    <componentmodel:SortDescription PropertyName="HasCustomName" Direction="Descending" />
                    <componentmodel:SortDescription PropertyName="ItemIndex" Direction="Ascending" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
        </DockPanel.Resources>
        <Menu DockPanel.Dock="Top" Background="Transparent" BorderBrush="{x:Static SystemColors.ActiveBorderBrush}" BorderThickness="0,0,0,1">
            <Menu.Resources>
                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Setter Property="Margin" Value="4" />
                </Style>
            </Menu.Resources>
            <MenuItem Header="_Open File..." Command="{Binding OpenFileCommand}" />
            <MenuItem Header="_Make All Items Sellable" Command="{Binding MakeAllItemsSellableCommand}" />
            <MenuItem Header="_Save" Command="{Binding SaveCommand}" IsEnabled="{Binding UnsavedChanges}" />
            <MenuItem Header="_Help" Command="Help" />
        </Menu>
        <Border Background="{x:Static SystemColors.ControlBrush}" DockPanel.Dock="Bottom" Height="24" />
        <Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding FileName}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False" />
                            <Setter Property="Opacity" Value="0.5" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" SharedSizeGroup="TopRow" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <GroupBox Header="Filters" Margin="4">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="FrameworkElement" x:Key="ElementStyle">
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ElementStyle}">
                                <Setter Property="TextAlignment" Value="Right" />
                            </Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextBoxValidationErrorTemplate}" />
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Name:" />
                        <TextBox Grid.Column="1" Text="{Binding ItemNameFilter, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Grid.Column="2" Text="Cur. Durability:" />
                        <TextBox Grid.Column="3">
                            <TextBox.Text>
                                <Binding Path="CurrentDurabilityFilter" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <views:RegexValidationRule Pattern="^\d+(\.\d+)?$" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBlock Grid.Column="4" Text="Max. Durability:" />
                        <TextBox Grid.Column="5">
                            <TextBox.Text>
                                <Binding Path="MaxDurabilityFilter" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <views:RegexValidationRule Pattern="^\d+(\.\d+)?$" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <Button Grid.Column="6" Content="Reset" Command="{Binding ResetFiltersCommand}" Margin="2" VerticalAlignment="Center" />
                    </Grid>
                </GroupBox>
                <ListView x:Name="PART_ListView" Grid.Row="1" ItemsSource="{Binding Source={StaticResource FilteredItems}}" SelectedItem="{Binding SelectedItem}"
                    Margin="4" BorderBrush="LightGray" SelectionMode="Single" FocusVisualStyle="{x:Null}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="views:MouseDoubleClick.CommandParameter" Value="{Binding}" />
                            <Setter Property="views:MouseDoubleClick.Command" Value="{Binding EditItemHexCommand, Source={StaticResource ViewModel}}" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="AutoSize Columns" Click="AutoSizeColumns_Click"/>
                        </ContextMenu>
                    </ListView.ContextMenu>
                    <ListView.View>
                        <GridView AllowsColumnReorder="True">
                            <GridViewColumn Header="ID" DisplayMemberBinding="{Binding ItemId, Converter={StaticResource LittleEndianConverter}}" Width="Auto" />
                            <GridViewColumn Header="Name" DisplayMemberBinding="{Binding ItemName}" Width="Auto" />
                            <GridViewColumn Header="Cur Durability" Width="Auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type views:ItemModel}">
                                        <TextBlock Text="{Binding CurrentDurability, StringFormat='{}{0:#0.####}'}" TextAlignment="Right" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Max Durability" Width="Auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type views:ItemModel}">
                                        <TextBlock Text="{Binding MaxDurability, StringFormat='{}{0:#0.####}'}" TextAlignment="Right" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="# Effects" Width="Auto" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type views:ItemModel}">
                                        <TextBlock Text="{Binding EffectCount, StringFormat='{}{0:#,###0}'}" TextAlignment="Right" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Sellable?" Width="Auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type views:ItemModel}">
                                        <CheckBox IsChecked="{Binding IsUnsellable, Converter={StaticResource NegatedBooleanConverter}, Mode=TwoWay}" HorizontalAlignment="Center" 
                                        PreviewMouseLeftButtonDown="CheckBox_PreviewMouseLeftButtonDown"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="# Core Effects" Width="Auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type views:ItemModel}">
                                        <TextBlock Text="{Binding CoreEffectCount, StringFormat='{}{0:#,###0}'}" TextAlignment="Right" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>            
            <GridSplitter Grid.Column="1" Width="2" HorizontalAlignment="Stretch" Background="{x:Static SystemColors.ControlBrush}" FocusVisualStyle="{x:Null}" />
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" SharedSizeGroup="TopRow"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <GroupBox Header="Inventory Size" Margin="4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Size:" Margin="2" VerticalAlignment="Center" TextAlignment="Right"/>
                        <TextBox Grid.Column="1" MinWidth="100" Margin="2" TextAlignment="Right" Validation.ErrorTemplate="{StaticResource TextBoxValidationErrorTemplate}">
                            <TextBox.Text>
                                <Binding Path="InventorySize" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <views:RegexValidationRule Pattern="^\d+$" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <Button Grid.Column="2" Margin="2" Command="{Binding UpdateInventorySizeCommand}" Content="_Update" />
                    </Grid>
                </GroupBox>
                <GroupBox Grid.Row="1" Margin="4" Header="Properties">
                    <GroupBox.Style>
                        <Style TargetType="{x:Type GroupBox}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedItem}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Opacity" Value="0.66" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </GroupBox.Style>
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Style.Triggers>
                                    <Trigger Property="IsVisible" Value="True">
                                        <Setter Property="constructs:ValidatingPropertyBehavior.ValidatingProperty" Value="{x:Static TextBox.TextProperty}" />
                                    </Trigger>
                                    <Trigger Property="IsReadOnly" Value="True">
                                        <Setter Property="Background" Value="{x:Static SystemColors.ControlBrush}" />
                                    </Trigger>
                                </Style.Triggers>
                                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextBoxValidationErrorTemplate}" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="Grid.Column" Value="1" />
                            </Style>
                            <constructs:SingleConverter x:Key="FloatConverter" />
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Name:" TextAlignment="Right" Margin="2" VerticalAlignment="Center" />
                        <TextBox IsReadOnly="{Binding SelectedItem.HasCustomName, Converter={StaticResource NegatedBooleanConverter}}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedItem}" Value="{x:Null}">
                                            <Setter Property="Text" Value="" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Text">
                                        <Setter.Value>
                                            <Binding Path="SelectedItem.ItemName">
                                                <Binding.ValidationRules>
                                                    <constructs:ValueRequiredValidationRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <TextBlock Text="Cur Durability:" Grid.Row="1" TextAlignment="Right" Margin="2" VerticalAlignment="Center" />
                        <TextBox Grid.Row="1" TextAlignment="Right">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedItem}" Value="{x:Null}">
                                            <Setter Property="Text" Value="" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Text">
                                        <Setter.Value>
                                            <Binding Path="SelectedItem.CurrentDurability" Converter="{StaticResource FloatConverter}">
                                                <Binding.ValidationRules>
                                                    <views:DurabilityValidationRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <TextBlock Text="Max Durability:" Grid.Row="2" TextAlignment="Right" Margin="2" VerticalAlignment="Center" />
                        <TextBox Grid.Row="2" TextAlignment="Right">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedItem}" Value="{x:Null}">
                                            <Setter Property="Text" Value="" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Text">
                                        <Setter.Value>
                                            <Binding Path="SelectedItem.MaxDurability" Converter="{StaticResource FloatConverter}">
                                                <Binding.ValidationRules>
                                                    <views:DurabilityValidationRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                </GroupBox>
                <GroupBox Grid.Row="2" Margin="4" Header="Effects">
                    <GroupBox.Style>
                        <Style TargetType="{x:Type GroupBox}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedItem}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Opacity" Value="0.66" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </GroupBox.Style>
                    <Grid x:Name="PART_Grid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock VerticalAlignment="Center" Margin="2" TextAlignment="Right" Text="# Effects:"/>
                        <TextBox Grid.Column="1" VerticalAlignment="Center" Margin="2" Text="{Binding SelectedItem.EffectCount, Mode=OneWay}" 
                            TextAlignment="Right" IsReadOnly="True" Background="{x:Static SystemColors.ControlBrush}" />
                        <views:EffectsControl Grid.Row="1" Grid.ColumnSpan="2" ProcessEffectLabel="Delete" Header="Existing Effects:" DataContext="{Binding SelectedItem}" Effects="{Binding Effects}" 
                            SelectedEffect="{Binding SelectedEffect}" Command="{Binding DataContext.DeleteEffectCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                        <views:EffectsControl Grid.Row="2" Grid.ColumnSpan="2" ProcessEffectLabel="Add" Header="Add Effect:" Effects="{x:Static views:MainViewModel.Effects}" 
                            SelectedEffect="{Binding SelectedEffect}" Command="{Binding AddEffectCommand}" />
                    </Grid>
                </GroupBox>
                <GroupBox Grid.Row="3" Margin="4" Header="Core Effects">
                    <GroupBox.Style>
                        <Style TargetType="{x:Type GroupBox}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedItem}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Opacity" Value="0.66" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </GroupBox.Style>
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="TextAlignment" Value="Right" />
                            </Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Setter Property="Grid.Column" Value="1" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="2" />
                                <Setter Property="IsReadOnly" Value="True" />
                                <Setter Property="Background" Value="{x:Static SystemColors.ControlBrush}" />
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Effect 0:"/>
                        <TextBox Text="{Binding SelectedItem.CoreEffect0, Mode=OneWay}" />
                        <TextBlock Grid.Row="1" Text="Effect 1:"/>
                        <TextBox Grid.Row="1" Text="{Binding SelectedItem.CoreEffect1, Mode=OneWay}" />
                        <TextBlock Grid.Row="2" Text="Effect 2:"/>
                        <TextBox Grid.Row="2" Text="{Binding SelectedItem.CoreEffect2, Mode=OneWay}" />
                        <TextBlock Grid.Row="3" Text="Effect 3:"/>
                        <TextBox Grid.Row="3" Text="{Binding SelectedItem.CoreEffect3, Mode=OneWay}" />
                        <TextBlock Grid.Row="4" Text="Mystery #:"/>
                        <TextBox Grid.Row="4" Text="{Binding SelectedItem.MysteryInteger, Mode=OneWay, StringFormat=X2}" />
                    </Grid>
                </GroupBox>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
